// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

model Game {
  id              Int      @id
  igdbUpdatedAt   BigInt
  name            String   @db.VarChar(256)
  summary         String?  @db.VarChar(10000)
  slug            String   @unique @db.VarChar(256)
  releaseDate     BigInt?
  cover           String?
  igdbRating      Float    @default(0)
  igdbRatingCount Int      @default(0)
  reviews         Review[]
  ratings         Rating[]
  status          Status[]

  @@index([slug])
  @@index([name])
}

model Rating {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  score     Float
  authorId  String
  game      Game     @relation(fields: [gameId], references: [id])
  gameId    Int

  @@unique([authorId, gameId])
  @@index([authorId])
  @@index([gameId])
}

model Status {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt @default(now())
  authorId      String
  isPlaying     Boolean  @default(false)
  hasPlayed     Boolean  @default(false)
  hasBacklogged Boolean  @default(false)
  hasDropped    Boolean  @default(false)
  game          Game     @relation(fields: [gameId], references: [id])
  gameId        Int

  @@unique([authorId, gameId])
  @@index([authorId])
  @@index([gameId])
}

model Review {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  score       Float?
  description String   @db.VarChar(10000)
  authorId    String
  game        Game     @relation(fields: [gameId], references: [id])
  gameId      Int

  @@unique([authorId, gameId])
  @@index([authorId])
  @@index([gameId])
}

model Profile {
  authorId String @id @unique
  bio      String @db.VarChar(1000)
}
